#!/usr/bin/env bash
# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º –∏ –ë–î PYon

DB_URL=${DATABASE_URL:-"postgres://pyon:pyon123@localhost:5432/pyon_db"}
BASE_DIR="$(cd "$(dirname "$0")" && pwd)"
LOG_FILE="$BASE_DIR/server.log"
PID_FILE="$BASE_DIR/server.pid"
PROJECT_DIR="$BASE_DIR"

add_admin() {
  read -p "–ò–º—è: " NAME
  read -p "Email: " EMAIL
  read -s -p "–ü–∞—Ä–æ–ª—å: " PASS; echo
  PSQL_CMD="INSERT INTO admins (id,name,email,password_hash) VALUES (gen_random_uuid(),'$NAME','$EMAIL', crypt('$PASS', gen_salt('bf'))) ON CONFLICT (email) DO UPDATE SET password_hash = EXCLUDED.password_hash,name = EXCLUDED.name;"
  psql "$DB_URL" -v ON_ERROR_STOP=1 -c "$PSQL_CMD" && echo "–ê–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω/–æ–±–Ω–æ–≤–ª—ë–Ω"
}

delete_admin() {
  read -p "Email –∞–¥–º–∏–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: " EMAIL
  psql "$DB_URL" -c "DELETE FROM admins WHERE email='$EMAIL';" && echo "–£–¥–∞–ª–µ–Ω–æ"
}

list_admins() {
  psql "$DB_URL" -c "SELECT id,name,email,created_at FROM admins ORDER BY created_at;"
}

show_tables() {
  psql "$DB_URL" -c "\dt"
}

show_table() {
  read -p "–ò–º—è —Ç–∞–±–ª–∏—Ü—ã: " TBL
  psql "$DB_URL" -c "TABLE \"$TBL\" LIMIT 50;"
}

start_server() {
  echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:"
  echo "1) –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º (node app.js)"
  echo "2) PM2 —Ä–µ–∂–∏–º (–∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è + –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫)"
  read -p "–í—ã–±–æ—Ä (1-2): " mode
  
  if [[ "$mode" == "2" ]]; then
    start_server_pm2
  else
    start_server_normal
  fi
}

start_server_normal() {
  if [[ -f $PID_FILE && -e /proc/$(cat $PID_FILE) ]]; then
    echo "–°–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID $(cat $PID_FILE))"; return; fi
  cd "$PROJECT_DIR"
  npm run start 2>&1 | tee -a "$LOG_FILE" &
  echo $! > "$PID_FILE"
  echo "–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ, PID $!"
}

start_server_pm2() {
  echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ PM2..."
  cd "$PROJECT_DIR"
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ PM2
  if ! npx pm2 --version >/dev/null 2>&1; then
    echo "‚ùå PM2 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
    npm install pm2 --save-dev
  fi
  
  # –ó–∞–ø—É—Å–∫–∞–µ–º PM2 —Å –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–µ–π
  npx pm2 start ./app.js --name pyon-studio --instances max
  echo "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ PM2 —Å –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–µ–π!"
  npx pm2 status
}

stop_server() {
  echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:"
  echo "1) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—ã—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"
  echo "2) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PM2 —Å–µ—Ä–≤–µ—Ä"
  echo "3) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ (–æ–±—ã—á–Ω—ã–π + PM2)"
  read -p "–í—ã–±–æ—Ä (1-3): " mode
  
  case "$mode" in
    1) stop_server_normal;;
    2) stop_server_pm2;;
    3) stop_all_servers;;
    *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä";;
  esac
}

stop_server_normal() {
  if [[ -f $PID_FILE ]]; then
    kill $(cat "$PID_FILE") && rm "$PID_FILE" && echo "–û–±—ã—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å";
  else
    echo "PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –æ–±—ã—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω?";
  fi
}

stop_server_pm2() {
  echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2 —Å–µ—Ä–≤–µ—Ä–∞..."
  cd "$PROJECT_DIR"
  npx pm2 stop pyon-studio 2>/dev/null && echo "‚úÖ PM2 —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || echo "PM2 —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
  npx pm2 status
}

stop_all_servers() {
  echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤—Å–µ —Å–µ—Ä–≤–µ—Ä—ã Node.js..."
  
  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2 –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
  cd "$PROJECT_DIR"
  npx pm2 stop pyon-studio 2>/dev/null && echo "‚úÖ PM2 —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || echo "PM2 —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
  npx pm2 delete pyon-studio 2>/dev/null && echo "‚úÖ PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ" || echo "PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
  
  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã node app.js
  pkill -f "node app.js" 2>/dev/null && echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã Node.js –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" || echo "–°–µ—Ä–≤–µ—Ä—ã Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
  
  # –£–¥–∞–ª—è–µ–º PID —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
  [[ -f $PID_FILE ]] && rm "$PID_FILE" && echo "‚úÖ PID —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω"
  
  # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ—Ü–µ—Å—Å—ã —Ç–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å
  sleep 2
  echo "üéØ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

restart_server() { 
  stop_all_servers
  start_server
}

show_logs() {
  echo "–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –ª–æ–≥–æ–≤:"
  echo "1) –û–±—ã—á–Ω—ã–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞"
  echo "2) PM2 –ª–æ–≥–∏"
  echo "3) PM2 –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
  read -p "–í—ã–±–æ—Ä (1-3): " choice
  
  case "$choice" in
    1) tail -n 100 "$LOG_FILE";;
    2) cd "$PROJECT_DIR" && npx pm2 logs pyon-studio;;
    3) cd "$PROJECT_DIR" && npx pm2 monit;;
    *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä";;
  esac
}

pm2_status() {
  echo "üìä –°—Ç–∞—Ç—É—Å PM2:"
  cd "$PROJECT_DIR"
  npx pm2 status
}

pm2_restart() {
  echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PM2 —Å–µ—Ä–≤–µ—Ä–∞..."
  cd "$PROJECT_DIR"
  npx pm2 restart pyon-studio
  echo "‚úÖ PM2 —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"
  npx pm2 status
}

recreate_database() {
  echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ!"
  read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " confirm
  if [[ "$confirm" != "YES" ]]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    return
  fi
  
  echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤—Å–µ —Å–µ—Ä–≤–µ—Ä—ã..."
  stop_all_servers
  
  echo "–ü–µ—Ä–µ—Å–æ–∑–¥–∞—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
  
  # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ DB_URL
  DB_NAME=$(echo "$DB_URL" | sed 's/.*\///')
  DB_HOST=$(echo "$DB_URL" | sed 's/.*@\([^:]*\):.*/\1/')
  DB_PORT=$(echo "$DB_URL" | sed 's/.*:\([0-9]*\)\/.*/\1/')
  DB_USER=$(echo "$DB_URL" | sed 's/.*:\/\/\([^:]*\):.*/\1/')
  DB_PASS=$(echo "$DB_URL" | sed 's/.*:\/\/[^:]*:\([^@]*\)@.*/\1/')
  
  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ postgres –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è/—Å–æ–∑–¥–∞–Ω–∏—è –ë–î
  # –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DB_SUPERUSER_URL
  POSTGRES_URL="postgres://$DB_USER:$DB_PASS@$DB_HOST:$DB_PORT/postgres"
  MAINT_URL=${DB_SUPERUSER_URL:-$POSTGRES_URL}
  
  # –£–¥–∞–ª—è–µ–º –±–∞–∑—É –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  echo "–£–¥–∞–ª—è—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö '$DB_NAME'..."
  psql "$MAINT_URL" -c "DROP DATABASE IF EXISTS $DB_NAME;" 2>/dev/null || echo "–ë–∞–∑–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏"
  
  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É
  echo "–°–æ–∑–¥–∞—é –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö '$DB_NAME'..."
  psql "$MAINT_URL" -c "CREATE DATABASE $DB_NAME;" || {
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤?)."
    echo "–ü–æ–¥—Å–∫–∞–∑–∫–∞: —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DB_SUPERUSER_URL —Å –¥–æ—Å—Ç—É–ø–æ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–ª–∏ –¥–∞–π—Ç–µ —Ä–æ–ª–∏ '$DB_USER' –ø—Ä–∞–≤–æ CREATEDB:"
    echo "  psql $MAINT_URL -c \"ALTER ROLE $DB_USER CREATEDB;\""
    return 1
  }
  
  # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ö–µ–º—É
  echo "–ü—Ä–∏–º–µ–Ω—è—é —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
  psql "$DB_URL" -f "$BASE_DIR/../db/schema.sql" || {
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã"
    return 1
  }
  
  echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞!"
  echo "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä (–ø—É–Ω–∫—Ç 1)"
}

while true; do
  echo "\n===== PYon Management Menu ====="
  echo "üöÄ –°–ï–†–í–ï–†:"
  echo "1) –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä (–æ–±—ã—á–Ω—ã–π/PM2)"
  echo "2) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä (–æ–±—ã—á–Ω—ã–π/PM2)"
  echo "3) –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä (–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ + –∑–∞–ø—É—Å—Ç–∏—Ç—å)"
  echo "4) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –í–°–ï —Å–µ—Ä–≤–µ—Ä—ã Node.js"
  echo "5) –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–æ–±—ã—á–Ω—ã–µ/PM2/–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)"
  echo ""
  echo "üìä PM2 –£–ü–†–ê–í–õ–ï–ù–ò–ï:"
  echo "6) –°—Ç–∞—Ç—É—Å PM2"
  echo "7) –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PM2"
  echo ""
  echo "üë®‚Äçüíº –ê–î–ú–ò–ù–´:"
  echo "8) –î–æ–±–∞–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞"
  echo "9) –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞"
  echo "10) –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤"
  echo ""
  echo "üóÑÔ∏è  –ë–ê–ó–ê –î–ê–ù–ù–´–•:"
  echo "11) –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –ë–î"
  echo "12) –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–ª–∏—Ü—ã"
  echo "13) üî• –ü–ï–†–ï–°–û–ó–î–ê–¢–¨ –ë–ê–ó–£ –î–ê–ù–ù–´–• (–û–°–¢–û–†–û–ñ–ù–û!)"
  echo ""
  echo "0) –í—ã—Ö–æ–¥"
  read -p "–í—ã–±–æ—Ä: " choice
  case $choice in
    1) start_server;;
    2) stop_server;;
    3) restart_server;;
    4) stop_all_servers;;
    5) show_logs;;
    6) pm2_status;;
    7) pm2_restart;;
    8) add_admin;;
    9) delete_admin;;
    10) list_admins;;
    11) show_tables;;
    12) show_table;;
    13) recreate_database;;
    0) exit 0;;
    *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä";;
  esac
done
